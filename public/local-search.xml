<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>录制屏幕的浏览器工具</title>
    <link href="/personal_blog/%5Bobject%20Object%5D/2024/01/12/ScreenRecord/"/>
    <url>/personal_blog/%5Bobject%20Object%5D/2024/01/12/ScreenRecord/</url>
    
    <content type="html"><![CDATA[<h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><blockquote><p>本人小小 Tester 由于工作原因经常需要录制操作视频提交 Bug，各种录制工具都尝试过~ 不是收费就是太难用，忍无可忍当无须再忍。So 自己动手撸了一个浏览器的录制视频工具</p></blockquote><hr><h3 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h3><ul><li>当前版本使用 chrome 提供的 WebRTC 技术</li><li>备选方案使用 rrweb + canvas(目前调研中……)</li></ul><h4 id="核心的代码就是以下部分"><a href="#核心的代码就是以下部分" class="headerlink" title="核心的代码就是以下部分"></a>核心的代码就是以下部分</h4><p><img src="/personal_blog/images/ScreenRecord/code.png" alt="img"></p><blockquote><p><em>💡 主要原理就是通过 Chrome 提供的接口进行视频流录制，后期可将视频流通过转换格式上传至 OSS</em></p></blockquote><h4 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h4><ul><li><p>浏览器需要打开开发者模式, 然后加载插件文件夹就可以了</p><p><img src="/personal_blog/images/ScreenRecord/20240112155257.png" alt="img"></p></li><li><p>可配置 OSS 的地址实现云存储，当前插件匹配的是 MinIO</p><p><img src="/personal_blog/images/ScreenRecord/20240112161300.png" alt="img"></p></li></ul><h4 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h4><ul><li><p>首先，打开摄像头权限并且配置存储方式</p><p><img src="/personal_blog/images/ScreenRecord/20240112161417.png" alt="img"></p><ul><li><p>如果选择本地存储，当录制结束之后，点击【导出】按钮，自动下载至本地</p></li><li><p>如果选择云端存储，当录制结束之后，点击【导出】按钮，自动生成 URL 可在线观看录制的视频</p></li></ul></li><li><p>其次，选中需要录制的位置，可选范围为：某一个窗口、整个 windows</p><p><img src="/personal_blog/images/ScreenRecord/20240112161417.png" alt="img"></p></li><li><p>以下为完整操作视频</p><p><img src="/personal_blog/images/ScreenRecord/20240112164852.gif" alt="img"></p></li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><blockquote><p><em>⚠️ Chrome 提供的 WebRTC 录制接口只支持 https 的，如果是 http 协议暂时无法启动录制</em></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>提效工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Chrome插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>管理账号密码的浏览器工具</title>
    <link href="/personal_blog/%5Bobject%20Object%5D/2023/08/02/AccountManagement/"/>
    <url>/personal_blog/%5Bobject%20Object%5D/2023/08/02/AccountManagement/</url>
    
    <content type="html"><![CDATA[<h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><blockquote><p>日常互联网工作生活中经常遇到大量的浏览器账号密码，但是这些账号密码具体属于哪个系统随着时间堆积可能我们自己都记不清楚了，此工具的目的在于通过浏览器插件协助管理所有用户使用的账号和密码并进行标签管理以期达到脱离找不到账号密码的境遇</p></blockquote><hr><h3 id="Chrome-插件"><a href="#Chrome-插件" class="headerlink" title="Chrome 插件"></a>Chrome 插件</h3><ul><li><p>先上展台, 各位老板儿请上眼</p><p><img src="/personal_blog/images/AccountManagement/20230804143529.png" alt="img"></p></li></ul><h4 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h4><ul><li><p>浏览器需要打开开发者模式, 然后加载插件文件夹就可以了</p><p><img src="/personal_blog/images/AccountManagement/20230804152444.png" alt="img"></p></li></ul><h4 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h4><ul><li><p>当前有两种方法:</p><ul><li><p>一种是通过导入 Excel 文档将账号密码批量的存入插件中</p><p><img src="/personal_blog/images/AccountManagement/20230804153129.png" alt="img"></p></li><li><p>一种是通过打开网址 Url</p><p>① 输入好账号和密码</p><p><img src="/personal_blog/images/AccountManagement/20230804153341.png" alt="img"></p><p>② 点击插件【添加账号】按钮</p><p><img src="/personal_blog/images/AccountManagement/20230804153512.png" alt="img"></p></li></ul></li></ul><blockquote><p><em>⚠️ 以上两种方式都可以把账号密码存入插件永久保存</em></p></blockquote><ul><li><p>点击【一键登录】按钮</p><p><img src="/personal_blog/images/AccountManagement/20230804154116.png" alt="img"></p><ul><li><p>如果当前 Web 标签页是想登录系统即完成直接输入账号密码的登录动作</p></li><li><p>如果当前 Web 标签页不是想登录系统即完成跳转等待 3s 后输入账号密码的登录动作</p></li></ul></li><li><p>点击【复制】按钮</p><ul><li>可以将账号密码复制到粘贴板中, 通过微信 or 钉钉等通讯工具发送给其他小伙伴</li></ul></li><li><p>点击【删除】按钮</p><ul><li>可以删除插件存储的该账号密码</li></ul></li><li><p>点击【导出】按钮</p><ul><li>可以整体备份所有的账号密码, 下载至浏览器的默认文件夹</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>提效工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Chrome插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将chatGPT引入个人工作流的一种探索</title>
    <link href="/personal_blog/%5Bobject%20Object%5D/2023/06/05/Documentgpt/"/>
    <url>/personal_blog/%5Bobject%20Object%5D/2023/06/05/Documentgpt/</url>
    
    <content type="html"><![CDATA[<h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><blockquote><p>2023 年上半年可能最热门的话题就是 chatGPT，这个能融入实际工作中的 NLP 工具，已经让很多大厂看到了它商用的价值，本文将提供一种可以辅助个人工作流的实际应用思路，以便拓展我们对 chatGPT 的应用范围和使用方法</p></blockquote><hr><h3 id="VSCode-插件"><a href="#VSCode-插件" class="headerlink" title="VSCode 插件"></a>VSCode 插件</h3><h4 id="核心的代码就是以下部分"><a href="#核心的代码就是以下部分" class="headerlink" title="核心的代码就是以下部分"></a>核心的代码就是以下部分</h4><p><img src="/personal_blog/images/DocumentGPT/code.png" alt="img"></p><blockquote><p><em>💡 主要原理就是将问题通过 API 发送至 chatGPT 并将回答打印到当前激活的文档编辑器中</em></p></blockquote><h4 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h4><ul><li><p>打开扩展并安装插件</p><p><img src="/personal_blog/images/DocumentGPT/20230804135716.png" alt="img"></p></li><li><p>配置插件参数分两种：</p><ul><li><p>第一种就是通过 Settings 的界面</p><p><img src="/personal_blog/images/DocumentGPT/20240327145815.png" alt="img"></p></li><li><p>第二种就是通过 Settings 的 json</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;documentGPT.url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://api.aigcfun.com/api/v1/text&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// API请求接口</span><br>  <span class="hljs-attr">&quot;documentGPT.key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;FCYLFSDJ47RHP9JG2N&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// API请求Key</span><br>  <span class="hljs-attr">&quot;documentGPT.model&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GTP-3.5&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 模型选择</span><br>  <span class="hljs-attr">&quot;documentGPT.prompt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;我想让你充当前端开发专家。我将提供一些关于Js、Node等前端代码问题的具体信息，而你的工作就是想出为我解决问题的策略。&quot;</span> <span class="hljs-comment">// 新增prompt模板可以自行修改</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h4><ul><li>打开一份空白文档最好是.md 格式, 当然其他格式也支持:</li></ul><p><img src="/personal_blog/images/DocumentGPT/20230802103408.png" alt="img"></p><ul><li><p>Document Start 选项:</p><ul><li><p>第一种使用方式: 如果当前文档无鼠标选中内容则会打开一个输入框</p><ul><li><p>将你想问的问题输入到弹出框中</p><p><img src="/personal_blog/images/DocumentGPT/20230605174447.png" alt="img"></p></li><li><p><em>耐心等待 ing…</em></p></li><li><p>在我们等待 1 天之后, 可以看到插件已经将 chatGPT 的回答写入当前文档</p><p><img src="/personal_blog/images/DocumentGPT/20230605174637.png" alt="img"></p></li></ul></li><li><p>第二种使用方式: 如果当前文档存在鼠标选中的内容则会将内容直接提交 GPT</p><p><img src="/personal_blog/images/DocumentGPT/20230804141324.png" alt="img"></p><ul><li><em>⚠️ 此时请耐心等待 GPT 返回结果</em></li></ul></li></ul></li><li><p>Document Clear 选项:</p><ul><li>清除当前会话所有内容，再进行 GPT 询问时即会开启新的会话</li></ul></li><li><p>Document Custom 选项:</p><ul><li><p>为响应 chatGPT 的提示工程, 增加思维链提示(COT)入口</p></li><li><p>使用 Prompt 模板进行固定角色的 GPT 询问，此询问结果会更具有专业领域的价值</p><p><img src="/personal_blog/images/DocumentGPT/20230804141751.png" alt="img"></p><ul><li><p>可以看到通过和上图对比相同的问题, 此时 chatGPT 的回答更具有针对性(当前的提示为测试开发专家)</p></li><li><p>当然我们要记得自己将 Prompt 模板根据定制角色输入到 Settings 中</p></li></ul></li></ul></li></ul><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><ul><li><p>日常问题都可以进行相关询问</p></li><li><p>修复 Bug 之后可以使用 chatGPT 进行代码分析并提供测试用例示例</p></li><li><p>日常开发工作对业务代码的代码实例输出</p></li></ul><blockquote><p><em>⚠️ 通过以上方法我们就可以通过 VSCode 很容易的完成和 AI 的智能交互</em></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>提效工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VSCode插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人简介</title>
    <link href="/personal_blog/%5Bobject%20Object%5D/2023/06/02/HomePage/"/>
    <url>/personal_blog/%5Bobject%20Object%5D/2023/06/02/HomePage/</url>
    
    <content type="html"><![CDATA[<h3 id="个人独白"><a href="#个人独白" class="headerlink" title="个人独白"></a>个人独白</h3><blockquote><p>本人江湖小虾米一枚，之所以这叫自己是江湖小虾米是因为从小就崇拜江湖大侠，博主小时候看的最多的可能就是各种武侠类小说，尤其是内功可是这玩意儿几乎不可能存在，长大之后尤其是工作之后发现自己只能是螺丝钉，但是当某一天接触到代码发现可以通过自己的双手创造出很多自己觉得有趣的东西，仅以此地纪念自己的心路历程。</p></blockquote><ul><li>不定期进行技术相关的文章</li><li>作为个人抒发情感的地方</li></ul>]]></content>
    
    
    <categories>
      
      <category>个人简介</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人简介</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
